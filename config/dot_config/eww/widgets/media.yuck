;; Volume ;;
(defwidget volume-control []
  (eventbox :cursor "pointer"
  (box  :class "volume-control"
        :orientation "horizontal"
        :space-evenly "false"
    (button :class "volume-icon-control"
            :onclick "sh ${eww_scripts}/toggle-volume.sh" volume-icon))))

;; Volume Bar ;;
(defwidget volume-control-bar []
  (eventbox :cursor "pointer"
        (scale :class "volume-control-bar"
               :value current-volume
               :orientation "horizontal"
               :max 101
               :min 0
               :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")))

;; Volume Config ;;
(defwidget volume-settings []
  (eventbox :cursor "pointer"
  (box  :class "volume-control"
        :orientation "horizontal"
        :space-evenly "false"
    (button :class "volume-icon-control"
            :onclick "sh ${eww_scripts}/change-default-audio.sh" ""))))

;; Microphone ;;
(defwidget microphone-control []
  (eventbox :cursor "pointer"
  (box  :class "microphone-control"
        :orientation "horizontal"
        :space-evenly "false"
    (button :class "microphone-icon-control"
            :onclick "sh ${eww_scripts}/toggle-microphone.sh" {microphone-status ? "󰍬" : "󰍭" }))))

;; Microphone Bar ;;
(defwidget microphone-control-bar []
  (eventbox :cursor "pointer"
        (scale :class "microphone-control-bar"
               :value current-microphone
               :orientation "horizontal"
               :max 101
               :min 0
               :onchange "pactl set-source-volume @DEFAULT_SOURCE@ {}%")))

;; Microphone Config ;;
(defwidget microphone-settings []
  (eventbox :cursor "pointer"
  (box  :class "microphone-control"
        :orientation "horizontal"
        :space-evenly "false"
    (button :class "microphone-icon-control"
            :onclick "sh ${eww_scripts}/change-default-mic.sh" ""))))

;; Volume Group ;;
(defwidget volume-controls []
  (box  :class "volume-controls"
        :orientation "horizontal"
        :space-evenly "false"
        :spacing 10
        :halign "start"
        :vexpand "false"
        :hexpand "false"
        (volume-control)
        (volume-control-bar)
        (volume-settings)))

;; Microphone Group ;;
(defwidget microphone-controls []
  (box  :class "microphone-controls"
        :orientation "horizontal"
        :space-evenly "false"
        :spacing 10
        :halign "start"
        :vexpand "false"
        :hexpand "false"
        (microphone-control)
        (microphone-control-bar)
        (microphone-settings)))

;; Controls Group ;;
(defwidget controls []
  (box :class "controls"
       :orientation "vertical"
       :space-evenly "false"
       :spacing 8
       :halign "start"
       :vexpand "false"
       :hexpand "false"
       (bar-controls)))

;; Bar Group ;;
(defwidget bar-controls []
  (box :class "bar-controls"
       :orientation "vertical"
       :space-evenly "true"
       :spacing 8
       :halign "start"
       :vexpand "false"
       :hexpand "false"
       (volume-controls)
       (microphone-controls)))

;; Media Widget ;;
(defwindow media
  :monitor '[1, 0]'
  :geometry (geometry :x "0.5%"
                      :y "1%"
                      :width "10%"
                      :height "0%"
                      :anchor "top right")
;;   :stacking "bg"
;;   :exclusive "false"
;;   :focusable "false"
  (bar-controls))
