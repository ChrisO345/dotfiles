#!/usr/bin/env bash

set -e

MAX_DIR_NAME_LENGTH=10

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/lib/scribe"

dry_run="0"
failed="0"

if [ -z "$XDG_CONFIG_HOME" ]; then
  log note "XDG_CONFIG_HOME not set, defaulting to ~/.config"
  CONFIG_HOME="$HOME/.config"
else
  CONFIG_HOME="$XDG_CONFIG_HOME"
fi

if [ -z "$DOTFILES" ]; then
  log fatal "Environment variable \$DOTFILES must be set"
  failed="1"
fi

if [ "$failed" -eq "1" ]; then
  log error "Dotfiles setup aborted"
  exit 1
fi

log action "Beginning dotfiles setup from: $DOTFILES"

update_folders() {
  pushd "$1" &>/dev/null
  (
    configs=$(find . -mindepth 1 -maxdepth 1 -type d)
    for c in $configs; do
      directory="${2%/}/${c#./}"
      if [[ $dry_run == "0" ]]; then
        rm -rf "$directory"
        cp -r "./$c" "$2"
        folder=$(basename "$c")
        printf -v padded_c "%-${MAX_DIR_NAME_LENGTH}s" "$folder"
        log info "Replacing directory: $(basename "$1")/${padded_c} -> $2/$folder"
      fi
    done
  )
  popd &>/dev/null
}

copy() {
  local src_file
  src_file=$(basename "$1")

  printf -v padded_src "%-${MAX_DIR_NAME_LENGTH}s" "$src_file"
  if [[ $dry_run == "0" ]]; then
    rm -f "$2"
    cp "$1" "$2"
    log info "Copied: $padded_src -> $2"
  fi
}

log action "Copying individual config files"
copy "$DOTFILES/config/.gitconfig" "$HOME/.gitconfig"
copy "$DOTFILES/config/.zprofile" "$HOME/.zprofile"
copy "$DOTFILES/config/starship.toml" "$HOME/.config/starship.toml"

log action "Copying config directories"
update_folders "$DOTFILES/config/" "$CONFIG_HOME"

log success "Dotfiles setup completed successfully"
